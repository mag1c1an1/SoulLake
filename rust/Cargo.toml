[workspace]
members = ["soullake-io", "soullake-metadata"]
exclude = []
resolver = "3"

[workspace.package]
authors = []
edition = "2024"
homepage = ""
license = "Apache-2.0"
readme = "README.md"
repository = ""
# Define Minimum Supported Rust Version (MSRV)
rust-version = "1.87.0"
# Define DataFusion version
version = "0.1.0"

[workspace.dependencies]
# We turn off default-features for some dependencies here so the workspaces which inherit them can
# selectively turn them on if needed, since we can override default-features = true (from false)
# for the inherited dependency but cannot do the reverse (override from true to false).
#
# See for more details: https://github.com/rust-lang/cargo/issues/11329
snafu = { version = "0.8.6", features = ["backtrace"] }
datafusion = {path = "../../datafusion/datafusion/core", features = ["backtrace"]}


[profile.release]
codegen-units = 1
lto = true
strip = true      # Eliminate debug information to minimize binary size

# the release profile takes a long time to build so we can use this profile during development to save time
# cargo build --profile release-nonlto
[profile.release-nonlto]
codegen-units = 16
debug-assertions = false
incremental = false
inherits = "release"
lto = false
opt-level = 3
overflow-checks = false
rpath = false
strip = false            # Retain debug info for flamegraphs

[profile.ci]
inherits = "dev"
incremental = false

# ci turns off debug info, etc. for dependencies to allow for smaller binaries making caching more effective
[profile.ci.package."*"]
debug = false
debug-assertions = false
strip = "debuginfo"
incremental = false

# release inherited profile keeping debug information and symbols
# for mem/cpu profiling
[profile.profiling]
inherits = "release"
debug = true
strip = false

[workspace.lints.clippy]
# Detects large stack-allocated futures that may cause stack overflow crashes (see threshold in clippy.toml)
large_futures = "warn"
used_underscore_binding = "warn"
or_fun_call = "warn"
unnecessary_lazy_evaluations = "warn"
uninlined_format_args = "warn"

[workspace.lints.rust]
unexpected_cfgs = { level = "warn", check-cfg = [
    "cfg(tarpaulin)",
    "cfg(tarpaulin_include)",
] }
unused_qualifications = "deny"
